---
title: "Project Outline"
about:
  template: solana
  links:
    - icon: youtube
      text: Youtube
      href: https://www.youtube.com/channel/UCh4BLIfjlJCQ5Lks4nvvwwA
    - icon: github
      text: Github
      href: https://github.com/DanielsHappyWorks/mocap-with-kinect
---

# Rationale 

As a solo creator, I want to be able to produce content with an acceptable level of quality quickly with limited budget. Animation takes a lot of time, research, in-depth studies of real life and practice. I believe a part of this process could be simplified with motion capture when animating characters, but full body motion capture is too expensive for the average person with limited resources. 

As part of this project, I aim to find a way to create character animations of a reasonable quality with a limited budget faster than it would take me to record source materials and animate them manually. 

From initial research it seems like the Kinect is my best bet as many people have used it for the same reasons in the past. It's well documented and should be easy to set up. As some alternatives I may also compare this to AI based approaches based on time constraints. 

# Literature 

### Online resources: 

### Resources for investigating technology to use on a budget: 

-   Rokoko (2024) Smartsuit Pro II. Available at: <https://eu.store.rokoko.com/products/smartsuit-pro-ii> (Accessed: 16 August 2024). 
-   Autodesk (2017) Help: Motion capture for amateurs / low budget, Autodesk Community. Available at: <https://forums.autodesk.com/t5/motionbuilder-forum/help-motion-capture-for-amateurs-low-budget/td-p/7227461> (Accessed: 16 August 2024). 

#### Kinect pricing:  

-   Whitworth, D. (2010) Kinect gets UK release date, BBC News. Available at: <https://www.bbc.com/news/newsbeat-10996389> (Accessed: 16 August 2024). 
-   Ipisoft (No date) Kinect 360 vs Kinect XBOne? Available at: <https://forum.ipisoft.com/viewtopic.php?f=7&t=10114> (Accessed: 16 August 2024). 

#### Kinect Setup: 

-   Microsoft (2022) Kinect for windows. Available at: <https://learn.microsoft.com/en-us/windows/apps/design/devices/kinect-for-windows> (Accessed: 16 August 2024). 

#### Extracting Kinect Skeleton as FBX 

-   Furtado Junior, A. (no date) KinectAnimationStudio - Generate motion data from your Kinect V2 Skeletons, Kinectanimationstudio. Available at: <https://marcojrfurtado.github.io/KinectAnimationStudio/index.html> (Accessed: 03 October 2024).  
-   Evenmarbles (no date) Evenmarbles/Kinect: Extraction of Motion Capture Data from the Kinect, GitHub. Available at: <https://github.com/evenmarbles/kinect> (Accessed: 03 October 2024). 

#### Other Mocap methods: 

-   Mocap (Alpha) (no date) Cascadeur Documentation. Available at: <https://cascadeur.com/help/category/203> (Accessed: 03 October 2024).  
-   Rokoko vision: Free ai motion capture tool (no date) Rokoko Vision: Free AI Motion Capture Tool. Available at: <https://www.rokoko.com/products/vision> (Accessed: 03 October 2024).  
-   Main Page (no date) iPi Docs. Available at: <https://docs.ipisoft.com/Main_Page> (Accessed: 03 October 2024).  
-   Brekel Body V2 (2024) Brekel. Available at: <https://brekel.com/body-v2/> (Accessed: 03 October 2024). 

### Books: 

-   St Jean, J. (2012) Kinect Hacks. O’Reilly Media, Inc. <https://www.google.ie/books/edition/Kinect_Hacks/VsmK1Kt8oJcC?hl=en&gbpv=0> 

# Key terms 

-   Kinect – Relates specifically to Xbox One Kinect Sensor. It is a console accessory composed of multiple cameras that can discern depth. It is used for body tracking in video games. 
-   Motion Capture - Process of recording the movement of objects or people and applying them to 3d models. 
-   Budget – Amount of money dedicated for a spending. In this case it refers to spending as little as possible. 
-   Skeleton/Rig – Similar to a real skeleton. It is the bones that make up the virtual character and constrain their movements. 
-   Rigging – Technique used to animate the skeleton. 
-   Open Source – Publicly available code that can be redistributed and modified. 
-   SDK – Stands for Software Development Kit. Allows for the creation of applications using APIs defined by the provider. In this case Microsoft provides an SDK for the Kinect. 

# Questions to be addressed 

Can cheap motion capture tools be used to create adequate animations for game development on a budget? 

How good is Kinect as an option for cheap motion capture? 

What are the limitations of cheap motion capture solutions like the Kinect? 

# Methodology 

### General approach 

I will create a game as part of the other modules and insert the animations from this research to create an artifact. 

This will involve recording and exporting animations from the Kinect to UE5. 

Lastly, I will test the game with users and see what they think of the animations. 

### Subjects

Real life people that do the same actions I will try to emulate in the Kinect based animations.

### Methods

1.  Create sources for the listed animations I want to make 
2.  I will set up the Kinect for the Xbox One and setup the SDK. 
3.  Record an animation using the Kinect SDK while trying to emulate the sources. 
4.  Extract the skeleton data from the recording and migrate it to a format I can use in blender. 
5.  Map the skeleton animation to a [Mixamo](https://www.mixamo.com/#/) character & skeleton. 
6.  Export the animation and use it in the game. 
7.  Compare the animations to the sources and evaluate the success of the project. 
8.  Test the game with users to see if the animations are good enough to be immersive in the environment. 

### Limitations 

I will be only using one Kinect and open-source software for budget reasons. 

# Outline of Projected Results 

I expect I will be able to create 4 animations that will be used as part of a game called “A Walk in the Park”. This game will be made as part of software engineering and sound modules. The animations should be usable but based on initial research using just one Kinect camera could cause some issues with quality of the animations.

The 4 animations will include: 

1.  A parent waiting for their kid 
2.  A person walking around the park 
3.  A person fishing in the lake 
4.  A child on a swing – I will rock in a chair to simulate this! 

```{r, include = FALSE}
install.packages("ganttrify",
  repos = c(
    "https://giocomai.r-universe.dev",
    "https://cloud.r-project.org"
  )
)

library("ganttrify")
```

The timeline for this is defined in the gantt chart below.

```{r, echo = FALSE, warning = FALSE}
funky_project <- tibble::tribble(
  ~wp, ~activity, ~start_date, ~end_date,
  "Blogging", "Write blog posts", "2024-10-01", "2024-12-17",

  "Outline", "Write Outline", "2024-10-01", "2024-10-08",
  "Outline", "Revise Idea", "2024-10-01", "2024-10-02",
  "Outline", "Complie Research", "2024-10-04", "2024-10-06",
  "Outline", "Define Artefact", "2024-10-06", "2024-10-08",
  
  "Progress Report", "Extract animations from kinect", "2024-10-08", "2024-10-13",
  "Progress Report", "Map bones to existing character", "2024-10-13", "2024-10-20",
  "Progress Report", "Figure out presentation style", "2024-10-17", "2024-10-20",
  
  "Alpha", "Add new animations to a game", "2024-10-20", "2024-10-25",
  "Alpha", "Export the game new animations", "2024-10-25", "2024-10-30",
  "Alpha", "Create presentation", "2024-10-30", "2024-11-5",
  
  "Symposium", "Adjust Artifact Based on Alpha", "2024-11-5", "2024-11-30",
  "Symposium", "Export the updated artefact", "2024-11-30", "2024-12-5",
  "Symposium", "Prepare for presentation", "2024-12-5", "2024-12-10",
  
  "Final Documentation", "Create Reflective Journal", "2024-12-10", "2024-12-17",
  "Final Documentation", "Wrap Up Blog", "2024-12-10", "2024-12-17"
)

ganttrify(
  project = funky_project,
  project_start_date = "2024-06",
  by_date = TRUE,
  exact_date = TRUE,
  font_family = "Roboto Condensed"
)
```

# Potential Conclusions and Implications 

Hopefully I will be able to create good enough animations to use in a game. Using one Kinect could be a limitation that I may not be able to overcome easily but I can always leverage more if needed. This will be a last resort as the concept behind this project is to work on a budget. The same applies to paid software. I will try to use free or open-source applications unless issues arise. 
